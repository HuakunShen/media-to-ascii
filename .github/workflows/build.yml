# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ubuntu-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Install rust
      - name: Install rust
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y

      # Install opencv
      - name: Install opencv
        run: sudo apt install libopencv-dev clang libclang-dev
        
      # Build
      - name: Build
        run: cargo build --release
        
      # Ready artifacts for upload
      - name: Prepare Artifacts
        run: mv target/release/mediatoascii target/release/mediatoascii-x86_64-unknown-linux-gnu
        
      # Upload artifact: https://github.com/actions/upload-artifact
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mediatoascii-x86_64-unknown-linux-gnu
          path: target/release/mediatoascii-x86_64-unknown-linux-gnu
          retention-days: 1
        
  macos-build:
    # The type of runner that the job will run on
    runs-on: 	macos-12

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Install rust
      - name: Install rust
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y

      # Install opencv
      - name: Install opencv
        run: brew install opencv
        
      # Build
      - name: Build
        run: cargo build --release
        
      # Ready artifacts for upload
      - name: Prepare Artifacts
        run: mv target/release/mediatoascii target/release/mediatoascii-x86_64-apple-darwin
        
      # Upload artifact: https://github.com/actions/upload-artifact
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mediatoascii-x86_64-apple-darwin
          path: target/release/mediatoascii-x86_64-apple-darwin
          retention-days: 1
        
  windows-build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Install rust
      - name: Install rust
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      
      # Install vcpkg
      - name: run-vcpkg
        # You may pin to the exact commit or the version.
        # uses: lukka/run-vcpkg@c62308335e15360efe9eba11298318f7f6a3606e
        uses: lukka/run-vcpkg@v10.4
        with:
          # Specify the full SHA-1 hash of a Git commit (not a branch name, nor a tag!) that establishes which version of vcpkg needs to be used. When using vcpkg as a Git submodule, this input is *not* needed as implicitly specified by the submodule.
          vcpkgGitCommitId: d52632d9a0c4a5b57de285b1e03722a067dd80eb
          
      # Install llvm
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1.5.4

      # Install opencv
      - name: Install opencv
        run: |
          vcpkg update
          vcpkg install opencv4[contrib,nonfree]
        
      # Build
      - name: Build
        run: cargo build --release

